{"version":3,"sources":["webpack:///./src/pages/guides/configuration.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","href","subDirectory","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-guides-configuration-mdx-0b6c912a099920523b66.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mjperrins/projects/cat/guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Gatsby themes allow you to override configuration from the theme by defining the same property in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` at the root of your project. You can see the default configuration provided by the theme’s `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/blob/master/packages/gatsby-theme-carbon/gatsby-config.js\"\n        }}><inlineCode parentName=\"a\">{`gatsby-config.js`}</inlineCode></a>{` file.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Site Title and Description</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Manifest</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Favicon</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Additional font weights</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Image Compression</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Global Search</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Edit on Github link</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"site-title-and-description\"\n    }}>{`Site Title and Description`}</h2>\n    <p>{`To add a title and description to each page, simply provide them to siteMetadata in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n    description: 'A Gatsby theme for the carbon design system',\n    keywords: 'gatsby,theme,carbon',\n  },\n  plugins: ['gatsby-theme-carbon'],\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"manifest\"\n    }}>{`Manifest`}</h2>\n    <p>{`One of the first configurations should be to override the default manifest options, you can do this in `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{`. Any options you don’t set, will be provided by the theme. See the example project.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n  },\n  plugins: [\n    'gatsby-theme-carbon',\n    {\n      resolve: 'gatsby-plugin-manifest',\n      options: {\n        name: 'Carbon Design Gatsby Theme',\n        short_name: 'Gatsby Theme Carbon',\n        start_url: '/',\n        background_color: '#ffffff',\n        theme_color: '#0062ff',\n        display: 'browser',\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"favicon\"\n    }}>{`Favicon`}</h2>\n    <p>{`If you need to override the default favicon, you can do so by passing a relative path to the icon. It’s recommended to provide a 512 x 512 version.`}</p>\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` For best results, if you’re providing an icon for generation it should be…`}</p>\n    <ul>\n      <li parentName=\"ul\">{`at least as big as the largest icon being generated (512x512 by default).`}</li>\n      <li parentName=\"ul\">{`square (if it’s not, transparent bars will add to make it square).`}</li>\n      <li parentName=\"ul\">{`of one of the follow formats: JPEG, PNG, WebP, TIFF, GIF or SVG.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        iconPath: './src/images/custom-icon-512.png'\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-font-weights\"\n    }}>{`Additional font weights`}</h2>\n    <p>{`If needed, you can add support for additional Plex font weights. Don’t forget to specify italics for the additional weights if needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        // will get added to default [300, 400, 600]\n        additionalFontWeights: ['200', '200i]\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"image-compression\"\n    }}>{`Image Compression`}</h2>\n    <p>{`You can enable WebP by passing `}<inlineCode parentName=\"p\">{`withWebp: true`}</inlineCode>{` or providing your own optimization level. See the gatsby-remark-images `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-images/#options\"\n      }}>{`plugin options`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n  },\n  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        name: 'Gatsby Theme Carbon Starter',\n        shortName: 'Carbon Starter',\n        withWebp: true,\n      },\n    },\n  ],\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"global-search\"\n    }}>{`Global Search`}</h2>\n    <p>{`The GlobalSearch component is disabled by default. If you’d like to implement search functionality, you’ll need to follow these two steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`set the isSearchEnabled theme option to true`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        isSearchEnabled: true\n      },\n    },\n  ],\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Shadow the example search implementation at `}<inlineCode parentName=\"li\">{`/src/util/hooks/useSearch.js`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useEffect } from 'react';\nconst useAlgoliaSearch = () => {\n  // ...\n};\n\nexport default useAlgoliaSearch;\n`}</code></pre>\n    <p>{`The example `}<inlineCode parentName=\"p\">{`useSearch`}</inlineCode>{` hook demonstrates implementing search with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.algolia.com/\"\n      }}>{`Algolia`}</a>{`. Algolia is free for open source libraries. You can shadow this hook and replace it with your Algolia credentials or a library of your choosing.`}</p>\n    <h2 {...{\n      \"id\": \"edit-on-github-link\"\n    }}>{`Edit on GitHub link`}</h2>\n    <p>{`To add a link to the bottom of each page that points to the current page source in GitHub, provide an `}<inlineCode parentName=\"p\">{`repository`}</inlineCode>{` object to `}<inlineCode parentName=\"p\">{`siteMetadata`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` file. You can provide a `}<inlineCode parentName=\"p\">{`baseUrl`}</inlineCode>{`, and if needed, the `}<inlineCode parentName=\"p\">{`subDirectory`}</inlineCode>{` where your site source lives.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        repository: {\n          baseUrl: 'https://github.com/carbon-design-system/gatsby-theme-carbon',\n          subDirectory: '/packages/example',\n        },\n      },\n    },\n  ],\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}