{"componentChunkName":"component---src-pages-getting-started-cli-index-mdx","path":"/getting-started/cli/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"IBM Garage for Cloud CLI"},"relativePagePath":"/getting-started/cli/index.mdx","titleType":"page","MdxNode":{"id":"e4407132-9b1c-56fc-b7e5-ffcd3dcb36d3","children":[],"parent":"9abaee43-32cd-5357-ba4a-9e19c33820b7","internal":{"content":"---\ntitle: IBM Garage for Cloud CLI\n---\n\n<PageDescription>\n\nThe Developer Tools include the IBM Garage for Cloud (IGC) Developer Tools Command Line Interface (CLI)\n\n</PageDescription>\n\nThe [IGC CLI](https://github.com/ibm-garage-cloud/ibm-garage-cloud-cli) \nprovides a set of helpful utilities that can be invoked from the command line. \nThese utilities include:\n- Register your application's git repo into a **Jenkins** pipeline\n- List the ingress URLs for the tools installed in the environment\n- List the user names and passwords for the tools installed in the environment\n- Build and deploy images to the environment using the IBM Cloud Image Registery\n\n\nTo use the IGC CLI, it must be installed and your command line shell must be logged into IBM Cloud.\n\n## Installation\n\nFollow these steps to use the IGC CLI:\n- Install the CLI:\n    ```bash\n    npm i -g @garage-catalyst/ibm-garage-cloud-cli\n    ````\n- Run the CLI's help command to list the available commands:\n    ```bash\n    igc --help\n    ```\n\n    The help output looks like this:\n\n    ```bash\n    % igc --help\n    IBM Garage Cloud CLI\n\n    Usage: igc <command> [args]\n\n    Commands:\n    igc jenkins-auth  Generate a Jenkins api token and register it as kubernetes\n                        secret\n    igc gen-token     Generate a Jenkins api token\n    igc pipeline      Register a pipeline for the current code repository in\n                        Jenkins                                  [aliases: register]\n    igc git-webhook   Create a git webhook for a given Jenkins pipeline\n    igc build         Build the image and push it into the IBM Cloud registry\n    igc deploy        Deploy an image from the IBM Cloud registry into a\n                        kubernetes cluster\n    igc tools         Launch the IBM Garage for Cloud tools image connected to the\n                        current directory\n    igc vlan          Print out the vlan values\n    igc credentials   Lists the urls and credentials for the tools deployed to the\n                        cluster\n    igc ingress       List the current ingress hosts for deployed apps in a\n                        namespace\n\n    Options:\n    --version  Show version number                                       [boolean]\n    --help     Show help                                                 [boolean]\n    ```\n\n## Use the CLI\n\nOnce the IGC CLI is installed, whenever you use it, your command line shell must be logged into your \nIBM Cloud account using the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli \"IBM Cloud CLI and Developer Tools\").\n\n- Log into your IBM Cloud account with the correct region and resource group:\n    ```bash\n    ibmcloud login -a cloud.ibm.com -r <region> -g <resource group>\n    ```\n\n- Once logged in, you can use CLI commands.\n\n    For example, this command lists the dashboard URLs for all of the tools:\n\n    ```bash\n    igc ingress -n tools\n    ```\n\n## Available commands\n\n### vlan\n\nLists the `vlans` for a particular `resource group` and `region`. The command\nexpects that an `ibmcloud login` has already been performed to set up the\nenvironment.\n\n### credentials\n\nPrints the urls and credentials for the Catalyst tools deployed into the cluster.\nThis includes Jenkins, Argo CD, and SonarQube.\n\n### ingress\n\nLists the ingress urls for the provided namespace. If no namespace\nis provided, `dev` is used.\n\n### pipeline\n\nRegisters a git repository project as a Jenkins pipeline by creating a Kubernetes secret to hold\nthe Git authentication information, calling the Jenkins API, and creating a web-hook.\nThis command is intended to be run within the repository directory of a project for\nwhich a pipeline should be generated.\n\n### tools\n\nLaunches the `ibm-garage-cli-tools` docker image in an interactive\nterminal. This image provides commonly used infrastructure tools like,\n`terraform`, `kubectl`, etc.\n","type":"Mdx","contentDigest":"73d1e2e60ef2c1cd507121ad6303aba1","counter":278,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"IBM Garage for Cloud CLI"},"exports":{},"rawBody":"---\ntitle: IBM Garage for Cloud CLI\n---\n\n<PageDescription>\n\nThe Developer Tools include the IBM Garage for Cloud (IGC) Developer Tools Command Line Interface (CLI)\n\n</PageDescription>\n\nThe [IGC CLI](https://github.com/ibm-garage-cloud/ibm-garage-cloud-cli) \nprovides a set of helpful utilities that can be invoked from the command line. \nThese utilities include:\n- Register your application's git repo into a **Jenkins** pipeline\n- List the ingress URLs for the tools installed in the environment\n- List the user names and passwords for the tools installed in the environment\n- Build and deploy images to the environment using the IBM Cloud Image Registery\n\n\nTo use the IGC CLI, it must be installed and your command line shell must be logged into IBM Cloud.\n\n## Installation\n\nFollow these steps to use the IGC CLI:\n- Install the CLI:\n    ```bash\n    npm i -g @garage-catalyst/ibm-garage-cloud-cli\n    ````\n- Run the CLI's help command to list the available commands:\n    ```bash\n    igc --help\n    ```\n\n    The help output looks like this:\n\n    ```bash\n    % igc --help\n    IBM Garage Cloud CLI\n\n    Usage: igc <command> [args]\n\n    Commands:\n    igc jenkins-auth  Generate a Jenkins api token and register it as kubernetes\n                        secret\n    igc gen-token     Generate a Jenkins api token\n    igc pipeline      Register a pipeline for the current code repository in\n                        Jenkins                                  [aliases: register]\n    igc git-webhook   Create a git webhook for a given Jenkins pipeline\n    igc build         Build the image and push it into the IBM Cloud registry\n    igc deploy        Deploy an image from the IBM Cloud registry into a\n                        kubernetes cluster\n    igc tools         Launch the IBM Garage for Cloud tools image connected to the\n                        current directory\n    igc vlan          Print out the vlan values\n    igc credentials   Lists the urls and credentials for the tools deployed to the\n                        cluster\n    igc ingress       List the current ingress hosts for deployed apps in a\n                        namespace\n\n    Options:\n    --version  Show version number                                       [boolean]\n    --help     Show help                                                 [boolean]\n    ```\n\n## Use the CLI\n\nOnce the IGC CLI is installed, whenever you use it, your command line shell must be logged into your \nIBM Cloud account using the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli \"IBM Cloud CLI and Developer Tools\").\n\n- Log into your IBM Cloud account with the correct region and resource group:\n    ```bash\n    ibmcloud login -a cloud.ibm.com -r <region> -g <resource group>\n    ```\n\n- Once logged in, you can use CLI commands.\n\n    For example, this command lists the dashboard URLs for all of the tools:\n\n    ```bash\n    igc ingress -n tools\n    ```\n\n## Available commands\n\n### vlan\n\nLists the `vlans` for a particular `resource group` and `region`. The command\nexpects that an `ibmcloud login` has already been performed to set up the\nenvironment.\n\n### credentials\n\nPrints the urls and credentials for the Catalyst tools deployed into the cluster.\nThis includes Jenkins, Argo CD, and SonarQube.\n\n### ingress\n\nLists the ingress urls for the provided namespace. If no namespace\nis provided, `dev` is used.\n\n### pipeline\n\nRegisters a git repository project as a Jenkins pipeline by creating a Kubernetes secret to hold\nthe Git authentication information, calling the Jenkins API, and creating a web-hook.\nThis command is intended to be run within the repository directory of a project for\nwhich a pipeline should be generated.\n\n### tools\n\nLaunches the `ibm-garage-cli-tools` docker image in an interactive\nterminal. This image provides commonly used infrastructure tools like,\n`terraform`, `kubectl`, etc.\n","fileAbsolutePath":"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/getting-started/cli/index.mdx"}}}}