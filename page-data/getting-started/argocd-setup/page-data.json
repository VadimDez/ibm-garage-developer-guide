{"componentChunkName":"component---src-pages-getting-started-argocd-setup-index-mdx","path":"/getting-started/argocd-setup/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"ArgoCD setup","description":"Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository"},"relativePagePath":"/getting-started/argocd-setup/index.mdx","titleType":"page","MdxNode":{"id":"a9887495-8a7e-582d-97dd-035f344194d2","children":[],"parent":"1cac5035-b1a2-5129-9e55-8177cfea1e7d","internal":{"content":"---\ntitle: ArgoCD setup\ndescription: Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository\n---\n\n## Overview\nArgoCD is a complete **GitOps** tool for managing the deployment of built application images into other development environments this\nmight include *test*, *pre-prod* and *production*. It uses both the IBM Container Image Registry for sourcing built docker images and uses\nArtifactory for sourcing packaged Helm charts from your apps. Complete this setup to enable ArgoCD to be ready to integrate with Artifactory.\n\nRead the following guides to understand how to use it to create combined CI/CD solution read the following guides:\n\n<AnchorLinks small>\n  <AnchorLink to=\"/guides/continuous-integration\">Continuous Integration</AnchorLink>\n  <AnchorLink to=\"/guides/continuous-deployment\">Continuous Deployment</AnchorLink>\n</AnchorLinks>\n\n##  Configuration\n\nTo enable ArgoCD to work seamlessly with the Developer Tools\ninstallation you need to configure Artifactory to be used as a Helm Chart Repository.\nThis will enable the use of application Helm charts to be de-coupled from the docker image that is built with the Jenkins CI pipeline.\n\n### Clone ArgoCD Template\n\nUsing the ArgoCD Template you can get the `configMap` files required to easily ArgoCD\n\n- Clone the Repository to you development machine\n\n```bash\ngit clone https://github.com/ibm-garage-cloud/template-argocd-test\ncd template-argocd-test\n```\n\n\n### Update ConfigMap for ArgoCD\n\nIn the `config` directory there is a `yaml` file called `argocd-helm-repo.yaml`.\nEdit this file and modify the `- url:` to point to the URL of the Artifactory Repository.\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\n  namespace: tools\ndata:\n  helm.repositories: |\n    - url: <artifactory helm repository location>\n      name: helm-repository-location\n```\n\nYou need to have completed the setup of the Artifactory instance so it can store Helm charts from your CI pipeline with Jenkins.\n\nYou need to select\n\nTo obtain the `- url: ` you start by logging into Artifactory and clicking on `Setup Me Up` tile and click on the repository `generic-local`\n\n![Setup](setupartifactory.png \"Setup Screen\")\n\nThis will open the detailed setup view and from here you can copy the URL from the setup screen.\n\n![Setup](artifactoryurlsetup.png \"Setup Screen\")\n\nEdit the `argocd-helm-repo.yaml` and replace the value `<artifactory helm repository location>` with the value from the\nArtifactory console.\n\n### Run the `kubectl` Command\n\nNow you have edited the `yaml` file you need to make sure you are logged into either the IBM Kubernetes Service or Red Hat OpenShift consoles.\n\nYou can test this by running the following commands :\n\n```bash \nkubectl get nodes | oc get nodes\n```\n\nThere is a helper shell script that you can run called `addconfigmap.sh` this runs the following command to add the details of the Helm Registry with ArgoCD Config map.\n\n```\n#!/bin/bash\nkubectl apply -f argocd-helm-repo.yaml\n```\n\nOnce this is complete you can validate the configuration by opening the `argocd-cm` Config Map in the IKS Console or OpenShift Cluster Console.\nNavigate to the `tools` namespace and view the `Config Maps` open up the config map called `argocd-cm` and validate the the `Data`\nsection now has a `helm.repositories` entry that is referencing Artifactory.\n\n","type":"Mdx","contentDigest":"e9ac6ac0f69e43aa6aa2f527a1e58a3c","counter":253,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"ArgoCD setup","description":"Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository"},"exports":{},"rawBody":"---\ntitle: ArgoCD setup\ndescription: Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository\n---\n\n## Overview\nArgoCD is a complete **GitOps** tool for managing the deployment of built application images into other development environments this\nmight include *test*, *pre-prod* and *production*. It uses both the IBM Container Image Registry for sourcing built docker images and uses\nArtifactory for sourcing packaged Helm charts from your apps. Complete this setup to enable ArgoCD to be ready to integrate with Artifactory.\n\nRead the following guides to understand how to use it to create combined CI/CD solution read the following guides:\n\n<AnchorLinks small>\n  <AnchorLink to=\"/guides/continuous-integration\">Continuous Integration</AnchorLink>\n  <AnchorLink to=\"/guides/continuous-deployment\">Continuous Deployment</AnchorLink>\n</AnchorLinks>\n\n##  Configuration\n\nTo enable ArgoCD to work seamlessly with the Developer Tools\ninstallation you need to configure Artifactory to be used as a Helm Chart Repository.\nThis will enable the use of application Helm charts to be de-coupled from the docker image that is built with the Jenkins CI pipeline.\n\n### Clone ArgoCD Template\n\nUsing the ArgoCD Template you can get the `configMap` files required to easily ArgoCD\n\n- Clone the Repository to you development machine\n\n```bash\ngit clone https://github.com/ibm-garage-cloud/template-argocd-test\ncd template-argocd-test\n```\n\n\n### Update ConfigMap for ArgoCD\n\nIn the `config` directory there is a `yaml` file called `argocd-helm-repo.yaml`.\nEdit this file and modify the `- url:` to point to the URL of the Artifactory Repository.\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\n  namespace: tools\ndata:\n  helm.repositories: |\n    - url: <artifactory helm repository location>\n      name: helm-repository-location\n```\n\nYou need to have completed the setup of the Artifactory instance so it can store Helm charts from your CI pipeline with Jenkins.\n\nYou need to select\n\nTo obtain the `- url: ` you start by logging into Artifactory and clicking on `Setup Me Up` tile and click on the repository `generic-local`\n\n![Setup](setupartifactory.png \"Setup Screen\")\n\nThis will open the detailed setup view and from here you can copy the URL from the setup screen.\n\n![Setup](artifactoryurlsetup.png \"Setup Screen\")\n\nEdit the `argocd-helm-repo.yaml` and replace the value `<artifactory helm repository location>` with the value from the\nArtifactory console.\n\n### Run the `kubectl` Command\n\nNow you have edited the `yaml` file you need to make sure you are logged into either the IBM Kubernetes Service or Red Hat OpenShift consoles.\n\nYou can test this by running the following commands :\n\n```bash \nkubectl get nodes | oc get nodes\n```\n\nThere is a helper shell script that you can run called `addconfigmap.sh` this runs the following command to add the details of the Helm Registry with ArgoCD Config map.\n\n```\n#!/bin/bash\nkubectl apply -f argocd-helm-repo.yaml\n```\n\nOnce this is complete you can validate the configuration by opening the `argocd-cm` Config Map in the IKS Console or OpenShift Cluster Console.\nNavigate to the `tools` namespace and view the `Config Maps` open up the config map called `argocd-cm` and validate the the `Data`\nsection now has a `helm.repositories` entry that is referencing Artifactory.\n\n","fileAbsolutePath":"/Users/mjperrins/projects/cat/guide/src/pages/getting-started/argocd-setup/index.mdx"}}}}