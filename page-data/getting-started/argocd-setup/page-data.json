{"componentChunkName":"component---src-pages-getting-started-argocd-setup-index-mdx","path":"/getting-started/argocd-setup/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"ArgoCD Setup","description":"Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository"},"relativePagePath":"/getting-started/argocd-setup/index.mdx","titleType":"page","MdxNode":{"id":"2607f6b6-0d69-5b98-8485-eba7a75f21b6","children":[],"parent":"c808dd25-c994-572b-ad0b-40093aa0ae45","internal":{"content":"---\ntitle: ArgoCD Setup\ndescription: Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository\n---\n\n<PageDescription>\n\nComplete the steps for setting up ArgoCD so it can use the Helm repository in Artifactory \n\n</PageDescription>\n\n## Overview\n\nArgoCD is a complete [**GitOps**](https://www.weave.works/technologies/gitops/) tool for managing the deployment of application images into deployment environments. \nThese deployment environments often include ones for development lifecycle stages such as *test*, *pre-prod*, and *production*. \n\nTo deploy applications built using the Developer Tools environment, ArgoCD will use two types of artifacts, \nDocker images and Helm charts. This setup configures ArgoCD to retrieve the artifacts from these sources:\n- Docker images: The [IBM Cloud Container Registry](https://cloud.ibm.com/docs/services/Registry)\n- Helm charts: The [Artifactory repository](/getting-started/artifactory-setup)\n\nArgoCD, Artifactory, and Jenkins are three separate tools in the Developer Tools environment.\nThe environment uses a repository in Artifactory as its Helm chart repository.\nJenkins and ArgoCD use Artifactory to share Helm charts:\n- The Jenkins pipeline will build the Helm chart and store it in Artifactory\n- The ArgoCD pipeline will retrieve the Helm chart from Artifactory and use it to deploy the app\n\nArgoCD is part of the Developer Tools environment's complete CI/CD solution:\n\n<AnchorLinks small>\n  <AnchorLink to=\"/guides/continuous-integration\">Continuous Integration</AnchorLink>\n  <AnchorLink to=\"/guides/continuous-deployment\">Continuous Deployment</AnchorLink>\n</AnchorLinks>\n\n## Prerequisites\n\nArgoCD will need access to these resources:\n- Helm chart repository: Set up the [Helm chart repository in Artifactory](/getting-started/artifactory-setup) before setting up ArgoCD\n- Docker image registry: These instructions assume that the Developer Tools environment is installed in IBM Cloud, \nwhich includes the [IBM Cloud Container Registry](https://cloud.ibm.com/docs/services/Registry)\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe `template-argocd-test` repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- Open the `config/argocd-helm-repo.yaml` file in an editor\n\n- Edit the `data.helm.url` property to replace the value `<artifactory helm repository location>` \nwith the URL of the Helm repository location in Artifactory\n\n  ```yaml\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n    name: argocd-cm\n    namespace: tools\n  data:\n    helm.repositories: |\n      - url: <artifactory helm repository location>\n        name: helm-repository-location\n  ```\n\nUse the kubectl CLI to deploy the edited configuration file.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash \n  kubectl version --short\n  ```\n\n- Apply the configuration file to the cluster in the `tools` namespace\n\n  ```bash \n  kubectl apply -f argocd-helm-repo.yaml -n tools\n  ```\n\n  You can also do this using the `config/addconfigmap.sh` script in the `template-argocd-test` repo.\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the\nArtifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","type":"Mdx","contentDigest":"3fb99a2dab90926c3854d642c04ec0cb","counter":423,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"ArgoCD Setup","description":"Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository"},"exports":{},"rawBody":"---\ntitle: ArgoCD Setup\ndescription: Complete the setup of the ArgoCD tool so it can use Artifactory as a Helm repository\n---\n\n<PageDescription>\n\nComplete the steps for setting up ArgoCD so it can use the Helm repository in Artifactory \n\n</PageDescription>\n\n## Overview\n\nArgoCD is a complete [**GitOps**](https://www.weave.works/technologies/gitops/) tool for managing the deployment of application images into deployment environments. \nThese deployment environments often include ones for development lifecycle stages such as *test*, *pre-prod*, and *production*. \n\nTo deploy applications built using the Developer Tools environment, ArgoCD will use two types of artifacts, \nDocker images and Helm charts. This setup configures ArgoCD to retrieve the artifacts from these sources:\n- Docker images: The [IBM Cloud Container Registry](https://cloud.ibm.com/docs/services/Registry)\n- Helm charts: The [Artifactory repository](/getting-started/artifactory-setup)\n\nArgoCD, Artifactory, and Jenkins are three separate tools in the Developer Tools environment.\nThe environment uses a repository in Artifactory as its Helm chart repository.\nJenkins and ArgoCD use Artifactory to share Helm charts:\n- The Jenkins pipeline will build the Helm chart and store it in Artifactory\n- The ArgoCD pipeline will retrieve the Helm chart from Artifactory and use it to deploy the app\n\nArgoCD is part of the Developer Tools environment's complete CI/CD solution:\n\n<AnchorLinks small>\n  <AnchorLink to=\"/guides/continuous-integration\">Continuous Integration</AnchorLink>\n  <AnchorLink to=\"/guides/continuous-deployment\">Continuous Deployment</AnchorLink>\n</AnchorLinks>\n\n## Prerequisites\n\nArgoCD will need access to these resources:\n- Helm chart repository: Set up the [Helm chart repository in Artifactory](/getting-started/artifactory-setup) before setting up ArgoCD\n- Docker image registry: These instructions assume that the Developer Tools environment is installed in IBM Cloud, \nwhich includes the [IBM Cloud Container Registry](https://cloud.ibm.com/docs/services/Registry)\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe `template-argocd-test` repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- Open the `config/argocd-helm-repo.yaml` file in an editor\n\n- Edit the `data.helm.url` property to replace the value `<artifactory helm repository location>` \nwith the URL of the Helm repository location in Artifactory\n\n  ```yaml\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n    name: argocd-cm\n    namespace: tools\n  data:\n    helm.repositories: |\n      - url: <artifactory helm repository location>\n        name: helm-repository-location\n  ```\n\nUse the kubectl CLI to deploy the edited configuration file.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash \n  kubectl version --short\n  ```\n\n- Apply the configuration file to the cluster in the `tools` namespace\n\n  ```bash \n  kubectl apply -f argocd-helm-repo.yaml -n tools\n  ```\n\n  You can also do this using the `config/addconfigmap.sh` script in the `template-argocd-test` repo.\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the\nArtifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","fileAbsolutePath":"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/getting-started/argocd-setup/index.mdx"}}}}