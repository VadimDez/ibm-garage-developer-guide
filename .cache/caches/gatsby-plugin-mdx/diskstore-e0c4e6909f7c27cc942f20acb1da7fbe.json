{"expireTime":9007200828410573000,"key":"gatsby-plugin-mdx-entire-payload-8a0af22f9ff892cfe88fd48c0879d16a-/ibm-garage-developer-guide","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jenkins/workspace/dev/dev-ibm-garage-cloud.ibm-garage-developer-guide.sms-pipeline/node_modules/gatsby-theme-carbon/src/templates/Default.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":175,"offset":176},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":178},"end":{"line":5,"column":29,"offset":206},"indent":[]}},{"type":"jsx","value":"<PageDescription>","position":{"start":{"line":8,"column":1,"offset":209},"end":{"line":8,"column":18,"offset":226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use Jenkins to automate your continuous integration process","position":{"start":{"line":10,"column":1,"offset":228},"end":{"line":10,"column":60,"offset":287},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":228},"end":{"line":10,"column":60,"offset":287},"indent":[]}},{"type":"jsx","value":"</PageDescription>","position":{"start":{"line":12,"column":1,"offset":289},"end":{"line":12,"column":19,"offset":307},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In IBM Garage Method, one of the Develop practices is ","position":{"start":{"line":14,"column":1,"offset":309},"end":{"line":14,"column":55,"offset":363},"indent":[]}},{"type":"link","title":null,"url":"https://www.ibm.com/garage/method/practices/code/practice_continuous_integration/","children":[{"type":"text","value":"continuous integration","position":{"start":{"line":14,"column":56,"offset":364},"end":{"line":14,"column":78,"offset":386},"indent":[]}}],"position":{"start":{"line":14,"column":55,"offset":363},"end":{"line":14,"column":162,"offset":470},"indent":[]}},{"type":"text","value":".\nThe Developer Tools environment uses a Jenkins pipeline to automate continuous integration.","position":{"start":{"line":14,"column":162,"offset":470},"end":{"line":15,"column":92,"offset":563},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":309},"end":{"line":15,"column":92,"offset":563},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is continuous integration","position":{"start":{"line":17,"column":4,"offset":568},"end":{"line":17,"column":34,"offset":598},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":565},"end":{"line":17,"column":34,"offset":598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Continuous integration is a software development technique where software is built regularly by a team in an automated fashion.\nThis quote helps explain it:","position":{"start":{"line":19,"column":1,"offset":600},"end":{"line":20,"column":29,"offset":756},"indent":[1]}}],"position":{"start":{"line":19,"column":1,"offset":600},"end":{"line":20,"column":29,"offset":756},"indent":[1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Continuous Integration is a software development practice where members of a team integrate their work frequently,\nusually each person integrates at least daily - leading to multiple integrations per day.\nEach integration is verified by an automated build (including test) to\ndetect integration errors as quickly as possible. Many teams find that this approach leads to significantly\nreduced integration problems and allows a team to develop cohesive software more rapidly","position":{"start":{"line":22,"column":3,"offset":760},"end":{"line":26,"column":91,"offset":1240},"indent":[3,3,3,3]}}],"position":{"start":{"line":22,"column":3,"offset":760},"end":{"line":26,"column":91,"offset":1240},"indent":[3,3,3,3]}},{"type":"jsx","value":"<cite>– Martin Fowler</cite>","position":{"start":{"line":27,"column":3,"offset":1243},"end":{"line":27,"column":31,"offset":1271},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":758},"end":{"line":27,"column":31,"offset":1271},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is Jenkins","position":{"start":{"line":29,"column":4,"offset":1276},"end":{"line":29,"column":19,"offset":1291},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1273},"end":{"line":29,"column":19,"offset":1291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Jenkins is a self-contained, open source automation server that can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.\nIt is a perfect tool for helping manage continuous integration tasks for a wide range of software components.","position":{"start":{"line":31,"column":1,"offset":1293},"end":{"line":32,"column":110,"offset":1577},"indent":[1]}}],"position":{"start":{"line":31,"column":1,"offset":1293},"end":{"line":32,"column":110,"offset":1577},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Jenkins Pipeline (or simply \"Pipeline\") is a suite of plugins that supports implementing and integrating continuous delivery pipelines into Jenkins.","position":{"start":{"line":34,"column":1,"offset":1579},"end":{"line":34,"column":149,"offset":1727},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1579},"end":{"line":34,"column":149,"offset":1727},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A continuous delivery pipeline is an automated expression of your process for getting software from version control right through to your users and customers.","position":{"start":{"line":36,"column":1,"offset":1729},"end":{"line":36,"column":159,"offset":1887},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1729},"end":{"line":36,"column":159,"offset":1887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Jenkins Pipeline provides an extensible set of tools for modeling simple-to-complex delivery pipelines \"as code.\" The definition of a Jenkins Pipeline is typically written into a text file (called a ","position":{"start":{"line":38,"column":1,"offset":1889},"end":{"line":38,"column":200,"offset":2088},"indent":[]}},{"type":"link","title":null,"url":"https://jenkins.io/doc/pipeline/tour/hello-world/","children":[{"type":"text","value":"Jenkinsfile","position":{"start":{"line":38,"column":201,"offset":2089},"end":{"line":38,"column":212,"offset":2100},"indent":[]}}],"position":{"start":{"line":38,"column":200,"offset":2088},"end":{"line":38,"column":264,"offset":2152},"indent":[]}},{"type":"text","value":") that in turn is checked into a project’s source control repository.","position":{"start":{"line":38,"column":264,"offset":2152},"end":{"line":38,"column":333,"offset":2221},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1889},"end":{"line":38,"column":333,"offset":2221},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Pipelines","position":{"start":{"line":40,"column":5,"offset":2227},"end":{"line":40,"column":14,"offset":2236},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2223},"end":{"line":40,"column":14,"offset":2236},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Pipelines offer a set of stages or steps that can be chained together to allow a level of software\nautomation. This automation can be tailored to the specific project requirements.","position":{"start":{"line":42,"column":1,"offset":2238},"end":{"line":43,"column":82,"offset":2418},"indent":[1]}}],"position":{"start":{"line":42,"column":1,"offset":2238},"end":{"line":43,"column":82,"offset":2418},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"You can read more information about Jenkins Pipelines ","position":{"start":{"line":45,"column":1,"offset":2420},"end":{"line":45,"column":55,"offset":2474},"indent":[]}},{"type":"link","title":null,"url":"https://jenkins.io/doc/book/pipeline/","children":[{"type":"text","value":"here","position":{"start":{"line":45,"column":56,"offset":2475},"end":{"line":45,"column":60,"offset":2479},"indent":[]}}],"position":{"start":{"line":45,"column":55,"offset":2474},"end":{"line":45,"column":100,"offset":2519},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2420},"end":{"line":45,"column":100,"offset":2519},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Stages","position":{"start":{"line":47,"column":5,"offset":2525},"end":{"line":47,"column":11,"offset":2531},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2521},"end":{"line":47,"column":11,"offset":2531},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Pipelines are defined in a ","position":{"start":{"line":49,"column":1,"offset":2533},"end":{"line":49,"column":28,"offset":2560},"indent":[]}},{"type":"inlineCode","value":"Jenkinsfile","position":{"start":{"line":49,"column":28,"offset":2560},"end":{"line":49,"column":41,"offset":2573},"indent":[]}},{"type":"text","value":" that sits in the root of your application code. It defines a number of stages. Each of the ","position":{"start":{"line":49,"column":41,"offset":2573},"end":{"line":49,"column":133,"offset":2665},"indent":[]}},{"type":"inlineCode","value":"Starter Kit Templates","position":{"start":{"line":49,"column":133,"offset":2665},"end":{"line":49,"column":156,"offset":2688},"indent":[]}},{"type":"text","value":" includes a ","position":{"start":{"line":49,"column":156,"offset":2688},"end":{"line":49,"column":168,"offset":2700},"indent":[]}},{"type":"inlineCode","value":"Jenkinsfile","position":{"start":{"line":49,"column":168,"offset":2700},"end":{"line":49,"column":181,"offset":2713},"indent":[]}},{"type":"text","value":" that offers a number of stages. The stages have been configured to complete the build, test, package, and deploy of the application code. Each stage can use the defined defined ","position":{"start":{"line":49,"column":181,"offset":2713},"end":{"line":49,"column":359,"offset":2891},"indent":[]}},{"type":"inlineCode","value":"secrets","position":{"start":{"line":49,"column":359,"offset":2891},"end":{"line":49,"column":368,"offset":2900},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":49,"column":368,"offset":2900},"end":{"line":49,"column":373,"offset":2905},"indent":[]}},{"type":"inlineCode","value":"config maps","position":{"start":{"line":49,"column":373,"offset":2905},"end":{"line":49,"column":386,"offset":2918},"indent":[]}},{"type":"text","value":" that were previously configured during the installation of Development cluster setup.","position":{"start":{"line":49,"column":386,"offset":2918},"end":{"line":49,"column":472,"offset":3004},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2533},"end":{"line":49,"column":472,"offset":3004},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Developer Tools Pipeline","position":{"start":{"line":51,"column":4,"offset":3009},"end":{"line":51,"column":28,"offset":3033},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3006},"end":{"line":51,"column":28,"offset":3033},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To enable application compatibility between Kubernetes and OpenShift, the ","position":{"start":{"line":53,"column":1,"offset":3035},"end":{"line":53,"column":75,"offset":3109},"indent":[]}},{"type":"inlineCode","value":"Jenkinsfile","position":{"start":{"line":53,"column":75,"offset":3109},"end":{"line":53,"column":88,"offset":3122},"indent":[]}},{"type":"text","value":" is consistent between pipeline registration with\nboth platforms. Also, the Docker images are built from \n","position":{"start":{"line":53,"column":88,"offset":3122},"end":{"line":55,"column":1,"offset":3228},"indent":[1,1]}},{"type":"link","title":null,"url":"https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image","children":[{"type":"text","value":"UBI images","position":{"start":{"line":55,"column":2,"offset":3229},"end":{"line":55,"column":12,"offset":3239},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":3228},"end":{"line":55,"column":86,"offset":3313},"indent":[]}},{"type":"text","value":" \nso that their containers can run on both platforms.","position":{"start":{"line":55,"column":86,"offset":3313},"end":{"line":56,"column":52,"offset":3366},"indent":[1]}}],"position":{"start":{"line":53,"column":1,"offset":3035},"end":{"line":56,"column":52,"offset":3366},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These are the stages in the pipeline and a description of what each stage does. The ","position":{"start":{"line":58,"column":1,"offset":3368},"end":{"line":58,"column":85,"offset":3452},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"bold stage names","position":{"start":{"line":58,"column":87,"offset":3454},"end":{"line":58,"column":103,"offset":3470},"indent":[]}}],"position":{"start":{"line":58,"column":85,"offset":3452},"end":{"line":58,"column":105,"offset":3472},"indent":[]}},{"type":"text","value":" indicate \nthe stages that are required; the ","position":{"start":{"line":58,"column":105,"offset":3472},"end":{"line":59,"column":35,"offset":3517},"indent":[1]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"italics stage names","position":{"start":{"line":59,"column":38,"offset":3520},"end":{"line":59,"column":57,"offset":3539},"indent":[]}}],"position":{"start":{"line":59,"column":37,"offset":3519},"end":{"line":59,"column":58,"offset":3540},"indent":[]}}],"position":{"start":{"line":59,"column":35,"offset":3517},"end":{"line":59,"column":60,"offset":3542},"indent":[]}},{"type":"text","value":" indicate optional stages that can be deleted or will be ignored if the tool \nsupporting the stage is not installed. These stages represent a typical production pipeline flow for a cloud-native application.","position":{"start":{"line":59,"column":60,"offset":3542},"end":{"line":60,"column":129,"offset":3748},"indent":[1]}}],"position":{"start":{"line":58,"column":1,"offset":3368},"end":{"line":60,"column":129,"offset":3748},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Setup","position":{"start":{"line":61,"column":5,"offset":3753},"end":{"line":61,"column":10,"offset":3758},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":3751},"end":{"line":61,"column":12,"offset":3760},"indent":[]}},{"type":"text","value":": Clones the code into the pipeline","position":{"start":{"line":61,"column":12,"offset":3760},"end":{"line":61,"column":47,"offset":3795},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":3751},"end":{"line":61,"column":47,"offset":3795},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3749},"end":{"line":61,"column":47,"offset":3795},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Build","position":{"start":{"line":62,"column":5,"offset":3800},"end":{"line":62,"column":10,"offset":3805},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":3798},"end":{"line":62,"column":12,"offset":3807},"indent":[]}},{"type":"text","value":": Runs the build commands for the code","position":{"start":{"line":62,"column":12,"offset":3807},"end":{"line":62,"column":50,"offset":3845},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":3798},"end":{"line":62,"column":50,"offset":3845},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3796},"end":{"line":62,"column":50,"offset":3845},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Test","position":{"start":{"line":63,"column":5,"offset":3850},"end":{"line":63,"column":9,"offset":3854},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":3848},"end":{"line":63,"column":11,"offset":3856},"indent":[]}},{"type":"text","value":":\tValidates the unit tests for the code","position":{"start":{"line":63,"column":11,"offset":3856},"end":{"line":63,"column":50,"offset":3895},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":3848},"end":{"line":63,"column":50,"offset":3895},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3846},"end":{"line":63,"column":50,"offset":3895},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Publish pacts","position":{"start":{"line":64,"column":6,"offset":3901},"end":{"line":64,"column":19,"offset":3914},"indent":[]}}],"position":{"start":{"line":64,"column":5,"offset":3900},"end":{"line":64,"column":20,"offset":3915},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":3898},"end":{"line":64,"column":22,"offset":3917},"indent":[]}},{"type":"text","value":":\tPublishes any pact contracts that have been defined","position":{"start":{"line":64,"column":22,"offset":3917},"end":{"line":64,"column":75,"offset":3970},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":3898},"end":{"line":64,"column":75,"offset":3970},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":3896},"end":{"line":64,"column":75,"offset":3970},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Sonar scan","position":{"start":{"line":65,"column":6,"offset":3976},"end":{"line":65,"column":16,"offset":3986},"indent":[]}}],"position":{"start":{"line":65,"column":5,"offset":3975},"end":{"line":65,"column":17,"offset":3987},"indent":[]}}],"position":{"start":{"line":65,"column":3,"offset":3973},"end":{"line":65,"column":19,"offset":3989},"indent":[]}},{"type":"text","value":": Runs a sonar code scan of the source code and publishes the results to SonarQube","position":{"start":{"line":65,"column":19,"offset":3989},"end":{"line":65,"column":101,"offset":4071},"indent":[]}}],"position":{"start":{"line":65,"column":3,"offset":3973},"end":{"line":65,"column":101,"offset":4071},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":3971},"end":{"line":65,"column":101,"offset":4071},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Verify environment","position":{"start":{"line":66,"column":5,"offset":4076},"end":{"line":66,"column":23,"offset":4094},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":4074},"end":{"line":66,"column":25,"offset":4096},"indent":[]}},{"type":"text","value":": Validates the OpenShift or IKS environment configuration is valid","position":{"start":{"line":66,"column":25,"offset":4096},"end":{"line":66,"column":92,"offset":4163},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":4074},"end":{"line":66,"column":92,"offset":4163},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":4072},"end":{"line":66,"column":92,"offset":4163},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Build image","position":{"start":{"line":67,"column":5,"offset":4168},"end":{"line":67,"column":16,"offset":4179},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":4166},"end":{"line":67,"column":18,"offset":4181},"indent":[]}},{"type":"text","value":": Builds the code into a Docker images and stores it in the IBM Cloud Image registry","position":{"start":{"line":67,"column":18,"offset":4181},"end":{"line":67,"column":102,"offset":4265},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":4166},"end":{"line":67,"column":102,"offset":4265},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":4164},"end":{"line":67,"column":102,"offset":4265},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Deploy to DEV env","position":{"start":{"line":68,"column":5,"offset":4270},"end":{"line":68,"column":22,"offset":4287},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":4268},"end":{"line":68,"column":24,"offset":4289},"indent":[]}},{"type":"text","value":":\tDeploys the Docker image tagged version to ","position":{"start":{"line":68,"column":24,"offset":4289},"end":{"line":68,"column":69,"offset":4334},"indent":[]}},{"type":"inlineCode","value":"dev","position":{"start":{"line":68,"column":69,"offset":4334},"end":{"line":68,"column":74,"offset":4339},"indent":[]}},{"type":"text","value":" namespace using Helm Chart","position":{"start":{"line":68,"column":74,"offset":4339},"end":{"line":68,"column":101,"offset":4366},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":4268},"end":{"line":68,"column":101,"offset":4366},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":4266},"end":{"line":68,"column":101,"offset":4366},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Health Check","position":{"start":{"line":69,"column":5,"offset":4371},"end":{"line":69,"column":17,"offset":4383},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":4369},"end":{"line":69,"column":19,"offset":4385},"indent":[]}},{"type":"text","value":": Validates the Health Endpoint of the deployed application","position":{"start":{"line":69,"column":19,"offset":4385},"end":{"line":69,"column":78,"offset":4444},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":4369},"end":{"line":69,"column":78,"offset":4444},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":4367},"end":{"line":69,"column":78,"offset":4444},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Package Helm Chart","position":{"start":{"line":70,"column":6,"offset":4450},"end":{"line":70,"column":24,"offset":4468},"indent":[]}}],"position":{"start":{"line":70,"column":5,"offset":4449},"end":{"line":70,"column":25,"offset":4469},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":4447},"end":{"line":70,"column":27,"offset":4471},"indent":[]}},{"type":"text","value":": Stores the tagged version of the Helm chart in Artifactory","position":{"start":{"line":70,"column":27,"offset":4471},"end":{"line":70,"column":87,"offset":4531},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":4447},"end":{"line":70,"column":87,"offset":4531},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":4445},"end":{"line":70,"column":87,"offset":4531},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Trigger CD Pipeline","position":{"start":{"line":71,"column":6,"offset":4537},"end":{"line":71,"column":25,"offset":4556},"indent":[]}}],"position":{"start":{"line":71,"column":5,"offset":4536},"end":{"line":71,"column":26,"offset":4557},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":4534},"end":{"line":71,"column":28,"offset":4559},"indent":[]}},{"type":"text","value":": This is a GitOps stage that will update the build number in designated git repo and trigger ArgoCD for deployment to ","position":{"start":{"line":71,"column":28,"offset":4559},"end":{"line":71,"column":147,"offset":4678},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"test","position":{"start":{"line":71,"column":149,"offset":4680},"end":{"line":71,"column":153,"offset":4684},"indent":[]}}],"position":{"start":{"line":71,"column":147,"offset":4678},"end":{"line":71,"column":155,"offset":4686},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":4534},"end":{"line":71,"column":155,"offset":4686},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":4532},"end":{"line":71,"column":155,"offset":4686},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3749},"end":{"line":71,"column":155,"offset":4686},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Registering Pipelines","position":{"start":{"line":73,"column":4,"offset":4691},"end":{"line":73,"column":25,"offset":4712},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":4688},"end":{"line":73,"column":25,"offset":4712},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":75,"column":1,"offset":4714},"end":{"line":75,"column":5,"offset":4718},"indent":[]}},{"type":"link","title":null,"url":"/starterkits/starterkittemplates/","children":[{"type":"text","value":"Starter Kit Templates","position":{"start":{"line":75,"column":6,"offset":4719},"end":{"line":75,"column":27,"offset":4740},"indent":[]}}],"position":{"start":{"line":75,"column":5,"offset":4718},"end":{"line":75,"column":63,"offset":4776},"indent":[]}},{"type":"text","value":" are a good place to start to see how ","position":{"start":{"line":75,"column":63,"offset":4776},"end":{"line":75,"column":101,"offset":4814},"indent":[]}},{"type":"inlineCode","value":"Jenkinsfile","position":{"start":{"line":75,"column":101,"offset":4814},"end":{"line":75,"column":114,"offset":4827},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":75,"column":114,"offset":4827},"end":{"line":75,"column":119,"offset":4832},"indent":[]}},{"type":"inlineCode","value":"Dockerfile","position":{"start":{"line":75,"column":119,"offset":4832},"end":{"line":75,"column":131,"offset":4844},"indent":[]}},{"type":"text","value":" should be configured for use in a Jenkins CI pipeline. To register your git repo, use the ","position":{"start":{"line":75,"column":131,"offset":4844},"end":{"line":75,"column":222,"offset":4935},"indent":[]}},{"type":"link","title":null,"url":"/getting-started/cli","children":[{"type":"text","value":"IGC CLI","position":{"start":{"line":75,"column":223,"offset":4936},"end":{"line":75,"column":230,"offset":4943},"indent":[]}}],"position":{"start":{"line":75,"column":222,"offset":4935},"end":{"line":75,"column":253,"offset":4966},"indent":[]}},{"type":"text","value":". This command automates a number of manual steps you would have to do with Jenkins, including: managing secrets, webhooks, and pipeline registration in the Jenkins tools.","position":{"start":{"line":75,"column":253,"offset":4966},"end":{"line":75,"column":424,"offset":5137},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":4714},"end":{"line":75,"column":424,"offset":5137},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"igc pipeline","position":{"start":{"line":77,"column":1,"offset":5139},"end":{"line":79,"column":4,"offset":5163},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default, the pipeline will register into the ","position":{"start":{"line":81,"column":1,"offset":5165},"end":{"line":81,"column":49,"offset":5213},"indent":[]}},{"type":"inlineCode","value":"dev","position":{"start":{"line":81,"column":49,"offset":5213},"end":{"line":81,"column":54,"offset":5218},"indent":[]}},{"type":"text","value":" namespace and will copy all the ","position":{"start":{"line":81,"column":54,"offset":5218},"end":{"line":81,"column":87,"offset":5251},"indent":[]}},{"type":"inlineCode","value":"configMaps","position":{"start":{"line":81,"column":87,"offset":5251},"end":{"line":81,"column":99,"offset":5263},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":81,"column":99,"offset":5263},"end":{"line":81,"column":104,"offset":5268},"indent":[]}},{"type":"inlineCode","value":"secrets","position":{"start":{"line":81,"column":104,"offset":5268},"end":{"line":81,"column":113,"offset":5277},"indent":[]}},{"type":"text","value":" from the ","position":{"start":{"line":81,"column":113,"offset":5277},"end":{"line":81,"column":123,"offset":5287},"indent":[]}},{"type":"inlineCode","value":"tools","position":{"start":{"line":81,"column":123,"offset":5287},"end":{"line":81,"column":130,"offset":5294},"indent":[]}},{"type":"text","value":" namespace to the ","position":{"start":{"line":81,"column":130,"offset":5294},"end":{"line":81,"column":148,"offset":5312},"indent":[]}},{"type":"inlineCode","value":"dev","position":{"start":{"line":81,"column":148,"offset":5312},"end":{"line":81,"column":153,"offset":5317},"indent":[]}},{"type":"text","value":" namespace. This means the pipeline can execute, knowing it has access to the key information that enables it to integrate with both the cloud platform and the various development tools. See ","position":{"start":{"line":81,"column":153,"offset":5317},"end":{"line":81,"column":344,"offset":5508},"indent":[]}},{"type":"link","title":null,"url":"/guides/cluster-configuration","children":[{"type":"text","value":"Cluster Configuration","position":{"start":{"line":81,"column":345,"offset":5509},"end":{"line":81,"column":366,"offset":5530},"indent":[]}}],"position":{"start":{"line":81,"column":344,"offset":5508},"end":{"line":81,"column":398,"offset":5562},"indent":[]}},{"type":"text","value":" for more detailed information.","position":{"start":{"line":81,"column":398,"offset":5562},"end":{"line":81,"column":429,"offset":5593},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":5165},"end":{"line":81,"column":429,"offset":5593},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Registering Pipeline in new namespace","position":{"start":{"line":83,"column":5,"offset":5599},"end":{"line":83,"column":42,"offset":5636},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":5595},"end":{"line":83,"column":42,"offset":5636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use any namespace you want to register a pipeline. If you add ","position":{"start":{"line":85,"column":1,"offset":5638},"end":{"line":85,"column":71,"offset":5708},"indent":[]}},{"type":"inlineCode","value":"-n","position":{"start":{"line":85,"column":71,"offset":5708},"end":{"line":85,"column":75,"offset":5712},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":85,"column":75,"offset":5712},"end":{"line":85,"column":79,"offset":5716},"indent":[]}},{"type":"inlineCode","value":"namespace","position":{"start":{"line":85,"column":79,"offset":5716},"end":{"line":85,"column":90,"offset":5727},"indent":[]}},{"type":"text","value":" to your ","position":{"start":{"line":85,"column":90,"offset":5727},"end":{"line":85,"column":99,"offset":5736},"indent":[]}},{"type":"inlineCode","value":"igc pipeline","position":{"start":{"line":85,"column":99,"offset":5736},"end":{"line":85,"column":113,"offset":5750},"indent":[]}},{"type":"text","value":" command, it will create a new namespace if it doesn't already exist. It will copy the necessary ","position":{"start":{"line":85,"column":113,"offset":5750},"end":{"line":85,"column":210,"offset":5847},"indent":[]}},{"type":"inlineCode","value":"secrets","position":{"start":{"line":85,"column":210,"offset":5847},"end":{"line":85,"column":219,"offset":5856},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":85,"column":219,"offset":5856},"end":{"line":85,"column":224,"offset":5861},"indent":[]}},{"type":"inlineCode","value":"configMaps","position":{"start":{"line":85,"column":224,"offset":5861},"end":{"line":85,"column":236,"offset":5873},"indent":[]}},{"type":"text","value":" into that namespace and configure the build agents pods to run in that namespace.","position":{"start":{"line":85,"column":236,"offset":5873},"end":{"line":85,"column":318,"offset":5955},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":5638},"end":{"line":85,"column":318,"offset":5955},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"igc pipeline -n team-one","position":{"start":{"line":87,"column":1,"offset":5957},"end":{"line":89,"column":4,"offset":5993},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is good if you have various squads, teams, pairs or students working in the same Development Tools environment.","position":{"start":{"line":91,"column":1,"offset":5995},"end":{"line":91,"column":117,"offset":6111},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":5995},"end":{"line":91,"column":117,"offset":6111},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Continuous deployment","position":{"start":{"line":93,"column":4,"offset":6116},"end":{"line":93,"column":25,"offset":6137},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":6113},"end":{"line":93,"column":25,"offset":6137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to continuous integration, the Developer Tools environment also supports continuous delivery\nusing Artifactory and ArgoCD:","position":{"start":{"line":95,"column":1,"offset":6139},"end":{"line":96,"column":30,"offset":6273},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":6139},"end":{"line":96,"column":30,"offset":6273},"indent":[1]}},{"type":"jsx","value":"<AnchorLinks small>\n  <AnchorLink to=\"../../guides/artifact-management\">Artifact Management with Artifactory</AnchorLink>\n  <AnchorLink to=\"../../guides/continuous-delivery\">Continuous Delivery with ArgoCD</AnchorLink>\n</AnchorLinks>","position":{"start":{"line":98,"column":1,"offset":6275},"end":{"line":101,"column":15,"offset":6508},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":104,"column":1,"offset":6511},"end":{"line":104,"column":31,"offset":6541},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":104,"column":31,"offset":6541}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jenkins/workspace/dev/dev-ibm-garage-cloud.ibm-garage-developer-guide.sms-pipeline/node_modules/gatsby-theme-carbon/src/templates/Default.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use Jenkins to automate your continuous integration process`}</p>\n    </PageDescription>\n    <p>{`In IBM Garage Method, one of the Develop practices is `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/garage/method/practices/code/practice_continuous_integration/\"\n      }}>{`continuous integration`}</a>{`.\nThe Developer Tools environment uses a Jenkins pipeline to automate continuous integration.`}</p>\n    <h2 {...{\n      \"id\": \"what-is-continuous-integration\"\n    }}>{`What is continuous integration`}</h2>\n    <p>{`Continuous integration is a software development technique where software is built regularly by a team in an automated fashion.\nThis quote helps explain it:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Continuous Integration is a software development practice where members of a team integrate their work frequently,\nusually each person integrates at least daily - leading to multiple integrations per day.\nEach integration is verified by an automated build (including test) to\ndetect integration errors as quickly as possible. Many teams find that this approach leads to significantly\nreduced integration problems and allows a team to develop cohesive software more rapidly`}</p>\n      <cite>– Martin Fowler</cite>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"what-is-jenkins\"\n    }}>{`What is Jenkins`}</h2>\n    <p>{`Jenkins is a self-contained, open source automation server that can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.\nIt is a perfect tool for helping manage continuous integration tasks for a wide range of software components.`}</p>\n    <p>{`Jenkins Pipeline (or simply “Pipeline”) is a suite of plugins that supports implementing and integrating continuous delivery pipelines into Jenkins.`}</p>\n    <p>{`A continuous delivery pipeline is an automated expression of your process for getting software from version control right through to your users and customers.`}</p>\n    <p>{`Jenkins Pipeline provides an extensible set of tools for modeling simple-to-complex delivery pipelines “as code.” The definition of a Jenkins Pipeline is typically written into a text file (called a `}<a parentName=\"p\" {...{\n        \"href\": \"https://jenkins.io/doc/pipeline/tour/hello-world/\"\n      }}>{`Jenkinsfile`}</a>{`) that in turn is checked into a project’s source control repository.`}</p>\n    <h3 {...{\n      \"id\": \"pipelines\"\n    }}>{`Pipelines`}</h3>\n    <p>{`Pipelines offer a set of stages or steps that can be chained together to allow a level of software\nautomation. This automation can be tailored to the specific project requirements.`}</p>\n    <p>{`You can read more information about Jenkins Pipelines `}<a parentName=\"p\" {...{\n        \"href\": \"https://jenkins.io/doc/book/pipeline/\"\n      }}>{`here`}</a></p>\n    <h3 {...{\n      \"id\": \"stages\"\n    }}>{`Stages`}</h3>\n    <p>{`Pipelines are defined in a `}<inlineCode parentName=\"p\">{`Jenkinsfile`}</inlineCode>{` that sits in the root of your application code. It defines a number of stages. Each of the `}<inlineCode parentName=\"p\">{`Starter Kit Templates`}</inlineCode>{` includes a `}<inlineCode parentName=\"p\">{`Jenkinsfile`}</inlineCode>{` that offers a number of stages. The stages have been configured to complete the build, test, package, and deploy of the application code. Each stage can use the defined defined `}<inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`config maps`}</inlineCode>{` that were previously configured during the installation of Development cluster setup.`}</p>\n    <h2 {...{\n      \"id\": \"developer-tools-pipeline\"\n    }}>{`Developer Tools Pipeline`}</h2>\n    <p>{`To enable application compatibility between Kubernetes and OpenShift, the `}<inlineCode parentName=\"p\">{`Jenkinsfile`}</inlineCode>{` is consistent between pipeline registration with\nboth platforms. Also, the Docker images are built from\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image\"\n      }}>{`UBI images`}</a>{`\nso that their containers can run on both platforms.`}</p>\n    <p>{`These are the stages in the pipeline and a description of what each stage does. The `}<strong parentName=\"p\">{`bold stage names`}</strong>{` indicate\nthe stages that are required; the `}<strong parentName=\"p\"><em parentName=\"strong\">{`italics stage names`}</em></strong>{` indicate optional stages that can be deleted or will be ignored if the tool\nsupporting the stage is not installed. These stages represent a typical production pipeline flow for a cloud-native application.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Setup`}</strong>{`: Clones the code into the pipeline`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Build`}</strong>{`: Runs the build commands for the code`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Test`}</strong>{`:\tValidates the unit tests for the code`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`Publish pacts`}</em></strong>{`:\tPublishes any pact contracts that have been defined`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`Sonar scan`}</em></strong>{`: Runs a sonar code scan of the source code and publishes the results to SonarQube`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Verify environment`}</strong>{`: Validates the OpenShift or IKS environment configuration is valid`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Build image`}</strong>{`: Builds the code into a Docker images and stores it in the IBM Cloud Image registry`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Deploy to DEV env`}</strong>{`:\tDeploys the Docker image tagged version to `}<inlineCode parentName=\"li\">{`dev`}</inlineCode>{` namespace using Helm Chart`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Health Check`}</strong>{`: Validates the Health Endpoint of the deployed application`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`Package Helm Chart`}</em></strong>{`: Stores the tagged version of the Helm chart in Artifactory`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`Trigger CD Pipeline`}</em></strong>{`: This is a GitOps stage that will update the build number in designated git repo and trigger ArgoCD for deployment to `}<strong parentName=\"li\">{`test`}</strong></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"registering-pipelines\"\n    }}>{`Registering Pipelines`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/ibm-garage-developer-guide/starterkits/starterkittemplates/\"\n      }}>{`Starter Kit Templates`}</a>{` are a good place to start to see how `}<inlineCode parentName=\"p\">{`Jenkinsfile`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Dockerfile`}</inlineCode>{` should be configured for use in a Jenkins CI pipeline. To register your git repo, use the `}<a parentName=\"p\" {...{\n        \"href\": \"/ibm-garage-developer-guide/getting-started/cli\"\n      }}>{`IGC CLI`}</a>{`. This command automates a number of manual steps you would have to do with Jenkins, including: managing secrets, webhooks, and pipeline registration in the Jenkins tools.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`igc pipeline\n`}</code></pre>\n    <p>{`By default, the pipeline will register into the `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` namespace and will copy all the `}<inlineCode parentName=\"p\">{`configMaps`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`tools`}</inlineCode>{` namespace to the `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` namespace. This means the pipeline can execute, knowing it has access to the key information that enables it to integrate with both the cloud platform and the various development tools. See `}<a parentName=\"p\" {...{\n        \"href\": \"/ibm-garage-developer-guide/guides/cluster-configuration\"\n      }}>{`Cluster Configuration`}</a>{` for more detailed information.`}</p>\n    <h3 {...{\n      \"id\": \"registering-pipeline-in-new-namespace\"\n    }}>{`Registering Pipeline in new namespace`}</h3>\n    <p>{`You can use any namespace you want to register a pipeline. If you add `}<inlineCode parentName=\"p\">{`-n`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`namespace`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`igc pipeline`}</inlineCode>{` command, it will create a new namespace if it doesn’t already exist. It will copy the necessary `}<inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`configMaps`}</inlineCode>{` into that namespace and configure the build agents pods to run in that namespace.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`igc pipeline -n team-one\n`}</code></pre>\n    <p>{`This is good if you have various squads, teams, pairs or students working in the same Development Tools environment.`}</p>\n    <h2 {...{\n      \"id\": \"continuous-deployment\"\n    }}>{`Continuous deployment`}</h2>\n    <p>{`In addition to continuous integration, the Developer Tools environment also supports continuous delivery\nusing Artifactory and ArgoCD:`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink to=\"../../guides/artifact-management\" mdxType=\"AnchorLink\">Artifact Management with Artifactory</AnchorLink>\n  <AnchorLink to=\"../../guides/continuous-delivery\" mdxType=\"AnchorLink\">Continuous Delivery with ArgoCD</AnchorLink>\n    </AnchorLinks>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}