{"version":3,"sources":["webpack:///./src/pages/getting-started/cli/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","href","subDirectory","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-getting-started-cli-index-mdx-1bc588e9a5a8f195682e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide-old/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The Cloud Developer Tools environment includes the\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/ibm-garage-cloud/ibm-garage-cloud-cli\"\n        }}>{`IBM Garage Cloud (IGC) Developer Tools CLI`}</a>{`.`}</p>\n    </PageDescription>\n    <p>{`The CLI provides a set of helpful utilities that can be invoked from the command line.\nThese utilities include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`List the URLs for the tools installed in the environment`}</li>\n      <li parentName=\"ul\">{`List the usernames and passwords for the tools installed in the environment`}</li>\n      <li parentName=\"ul\">{`Build and deploy images to the environment using its registry`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`Follow these steps to use the IGC CLI:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install the CLI:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm i -g @garage-catalyst/ibm-garage-cloud-cli\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Log into your IBM Cloud account with the correct region and resource group:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`ibmcloud login -a cloud.ibm.com -r <region> -g <resource group>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Run the CLIâ€™s help command to list the available commands:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`igc --help\n`}</code></pre>\n        <p parentName=\"li\">{`  The help output looks like this:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`% igc --help\nIBM Garage Cloud CLI\n\nUsage: igc <command> [args]\n\nCommands:\nigc jenkins-auth  Generate a Jenkins api token and register it as kubernetes\n                    secret\nigc gen-token     Generate a Jenkins api token\nigc pipeline      Register a pipeline for the current code repository in\n                    Jenkins                                  [aliases: register]\nigc git-webhook   Create a git webhook for a given Jenkins pipeline\nigc build         Build the image and push it into the IBM Cloud registry\nigc deploy        Deploy an image from the IBM Cloud registry into a\n                    kubernetes cluster\nigc tools         Launch the IBM Garage for Cloud tools image connected to the\n                    current directory\nigc vlan          Print out the vlan values\nigc credentials   Lists the urls and credentials for the tools deployed to the\n                    cluster\nigc ingress       List the current ingress hosts for deployed apps in a\n                    namespace\n\nOptions:\n--version  Show version number                                       [boolean]\n--help     Show help                                                 [boolean]\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"available-commands\"\n    }}>{`Available commands`}</h2>\n    <h3 {...{\n      \"id\": \"vlan\"\n    }}>{`vlan`}</h3>\n    <p>{`Lists the `}<inlineCode parentName=\"p\">{`vlans`}</inlineCode>{` for a particular `}<inlineCode parentName=\"p\">{`resource group`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`region`}</inlineCode>{`. The command\nexpects that an `}<inlineCode parentName=\"p\">{`ibmcloud login`}</inlineCode>{` has already been performed to set up the\nenvironment.`}</p>\n    <h3 {...{\n      \"id\": \"credentials\"\n    }}>{`credentials`}</h3>\n    <p>{`Prints the urls and credentials for the Catalyst tools deployed into the cluster.\nThis includes Jenkins, Argo CD, and SonarQube.`}</p>\n    <h3 {...{\n      \"id\": \"ingress\"\n    }}>{`ingress`}</h3>\n    <p>{`Lists the ingress urls for the provided namespace. If no namespace\nis provided, `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` is used.`}</p>\n    <h3 {...{\n      \"id\": \"register\"\n    }}>{`register`}</h3>\n    <p>{`Registers a project as a Jenkins pipeline by creating a Kubernetes secret to hold\nthe Git authentication information, calling the Jenkins API, and creating a web-hook.\nThis command is intended to be run within the repository directory of a project for\nwhich a pipeline should be generated.`}</p>\n    <h3 {...{\n      \"id\": \"tools\"\n    }}>{`tools`}</h3>\n    <p>{`Launches the `}<inlineCode parentName=\"p\">{`ibm-garage-cli-tools`}</inlineCode>{` docker image in an interactive\nterminal. This image provides commonly used infrastructure tools like,\n`}<inlineCode parentName=\"p\">{`terraform`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, etc.`}</p>\n    <h2 {...{\n      \"id\": \"development\"\n    }}>{`Development`}</h2>\n    <h3 {...{\n      \"id\": \"run-the-tests\"\n    }}>{`Run the tests`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm test\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"run-the-cli-locally\"\n    }}>{`Run the cli locally`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm start\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}