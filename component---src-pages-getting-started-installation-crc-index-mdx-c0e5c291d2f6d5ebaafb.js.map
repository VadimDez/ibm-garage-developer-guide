{"version":3,"sources":["webpack:///./src/pages/getting-started/installation-crc/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Tabs","Tab","PageDescription","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","label","parentName","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-getting-started-installation-crc-index-mdx-c0e5c291d2f6d5ebaafb.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Pre-requisites\" mdxType=\"Tab\">\n        <ul>\n          <li parentName=\"ul\">{`CodeReady Containers `}<a parentName=\"li\" {...{\n              \"href\": \"https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.0/html/getting_started_guide/getting-started-with-codeready-containers_gsg#minimum-system-requirements_gsg\"\n            }}>{`Minimum system requirements`}</a></li>\n          <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n              \"href\": \"https://access.redhat.com/login\"\n            }}>{`Red Hat account`}</a>{` is required`}</li>\n        </ul>\n      </Tab>\n      <Tab label=\"Install CRC\" mdxType=\"Tab\">\n        <PageDescription mdxType=\"PageDescription\">\n          <p>{`Download CRC, install it, and configure it`}</p>\n        </PageDescription>\n        <p>{`Install and configure CRC as described in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.0/html/getting_started_guide/getting-started-with-codeready-containers_gsg\"\n          }}>{`Getting started with Red Hat CodeReady Containers`}</a>{`,\nstarting with section 1.5\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.0/html/getting_started_guide/getting-started-with-codeready-containers_gsg#installing-codeready-containers_gsg\"\n          }}>{`Installing CodeReady Containers`}</a>{`.`}</p>\n        <p>{`Some highlights and comments on installing CRC:`}</p>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`CRC executable`}</strong>{`: Copy the crc binary to your $PATH:`}</p>\n            <p parentName=\"li\">{`  From the directory where you untarred the download:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`cp crc /usr/local/bin\n`}</code></pre>\n            <p parentName=\"li\">{`  (Is the file literally named `}<inlineCode parentName=\"p\">{`crc`}</inlineCode>{`? Do execute permissions need to be set?)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Add memory`}</strong>{`: By default, the CRC VM is set to only use 8 GB of RAM. The more RAM you can give it, the better.`}</p>\n            <p parentName=\"li\">{`  To set it to 10 GB of RAM, do this after `}<inlineCode parentName=\"p\">{`crc setup`}</inlineCode>{` but before `}<inlineCode parentName=\"p\">{`crc start`}</inlineCode>{`:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`crc config set memory 10240\n`}</code></pre>\n          </li>\n        </ul>\n      </Tab>\n      <Tab label=\"Run CRC\" mdxType=\"Tab\">\n        <PageDescription mdxType=\"PageDescription\">\n          <p>{`Run the CRC cluster in a VM`}</p>\n        </PageDescription>\n        <p>{`Run CRC as described in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.0/html/getting_started_guide/getting-started-with-codeready-containers_gsg\"\n          }}>{`Getting started with Red Hat CodeReady Containers`}</a>{`,\nstarting with section 1.7\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.0/html/getting_started_guide/getting-started-with-codeready-containers_gsg#starting-the-virtual-machine_gsg\"\n          }}>{`Starting the virtual machine`}</a>{`.`}</p>\n        <p>{`Some highlights and comments on running CRC:`}</p>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Starting CRC`}</strong></p>\n            <p parentName=\"li\">{`  To start the CRC VM:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`crc start\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`CRC console`}</strong></p>\n            <p parentName=\"li\">{`  Open the CRC console in a web browser:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`http://console-openshift-console.apps-crc.testing\n`}</code></pre>\n            <p parentName=\"li\">{`  Log into the console using the kube.admin link.`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`The username is `}<inlineCode parentName=\"li\">{`kubeadmin`}</inlineCode></li>\n              <li parentName=\"ul\">{`The password is printed in the terminal window by `}<inlineCode parentName=\"li\">{`crc start`}</inlineCode></li>\n            </ul>\n          </li>\n        </ul>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Stopping CRC`}</strong></p>\n            <p parentName=\"li\">{`  To stop the CRC VM:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`crc stop\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Uninstalling CRC`}</strong></p>\n            <p parentName=\"li\">{`  To delete the CRC VM:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`crc delete\n`}</code></pre>\n          </li>\n        </ul>\n      </Tab>\n      <Tab label=\"Install Tools\" mdxType=\"Tab\">\n        <PageDescription mdxType=\"PageDescription\">\n          <p>{`Install the Cloud Developer Tools environment into the CRC cluster`}</p>\n        </PageDescription>\n        <p>{`Install the Cloud Developer Tools as described in `}<a parentName=\"p\" {...{\n            \"href\": \"installation\"\n          }}>{`Cloud Developer Tools Installation`}</a>{`.\nHowever, you really just need to `}<strong parentName=\"p\">{`Clone`}</strong>{` the scripts and `}<strong parentName=\"p\">{`Run`}</strong>{` them; you can skip the resource steps—see below.`}</p>\n        <p>{`Some highlights and comments on installing the Developer Tools:`}</p>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`API keys`}</strong></p>\n            <p parentName=\"li\">{`  The credentials file won’t be used, but still needs to exist and needs to contain the proper properties keys.\nThe values will be ignored. So copy the template file but there’s no need to edit it.`}</p>\n            <p parentName=\"li\">{`  Inside the `}<inlineCode parentName=\"p\">{`iteration-zero-ibmcloud`}</inlineCode>{` folder, copy `}<inlineCode parentName=\"p\">{`credentials.template`}</inlineCode>{` to a file named `}<inlineCode parentName=\"p\">{`credentials.properties`}</inlineCode>{`.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`cd iteration-zero-ibmcloud\ncp credentials.template credentials.properties\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`TF variables`}</strong></p>\n            <p parentName=\"li\">{`  The required variables in `}<inlineCode parentName=\"p\">{`terraform.tfvars`}</inlineCode>{` are required for IBM Cloud but are not needed for CRC.\nSo there’s no need to set the resource group and VLAN properties.`}</p>\n            <p parentName=\"li\">{`  For the optional variables, the `}<inlineCode parentName=\"p\">{`cluster_type`}</inlineCode>{` must be set to OpenShift:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`# The type of cluster that will be created/used (kubernetes or openshift)\ncluster_type=\"openshift\"\n`}</code></pre>\n            <p parentName=\"li\">{`  The other variables will be ignored, so no need to edit them.`}</p>\n          </li>\n        </ul>\n      </Tab>\n    </Tabs>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}