{"version":3,"sources":["webpack:///./src/pages/guides/continuous-deployment/index.mdx"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"icAMO,IAEeA,EAFTC,EAAe,GAOtBC,GALgBF,EAKgB,kBALR,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,0CAAyB,mBAAGC,WAAW,KAAQ,CAC3C,KAAQ,iEADa,gBAAzB,qKAIF,iBAAQ,CACN,GAAM,yBADR,yBAGA,sEAAqD,mBAAGA,WAAW,KAAQ,CACvE,KAAQ,mEADyC,wBAArD,4ZAGA,iBAAQ,CACN,GAAM,iCADR,iCAGA,+BAAc,0BAAYA,WAAW,KAAvB,UAAd,yBAA0F,0BAAYA,WAAW,KAAvB,QAA1F,gBAA2J,0BAAYA,WAAW,KAAvB,yBAA3J,mCAAgQ,0BAAYA,WAAW,KAAvB,UAAhQ,yDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uRAUL,2MAA0L,0BAAYA,WAAW,KAAvB,eAA1L,qCAAuR,0BAAYA,WAAW,KAAvB,iBAAvR,KACA,kBAAS,CACP,IAAO,gCACP,IAAO,QACP,MAAS,iBAEX,yHACA,kBAAS,CACP,IAAO,mCACP,IAAO,QACP,MAAS,iBAEX,iBAAQ,CACN,GAAM,2BADR,2BAGA,mLACA,8EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uCAIL,6EAA4D,0BAAYA,WAAW,KAAvB,iBAA5D,oGACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,0DAGL,4KAA2J,0BAAYA,WAAW,KAAvB,SAA3J,2BAAwO,0BAAYA,WAAW,KAAvB,eAAxO,kCAAkU,0BAAYA,WAAW,KAAvB,aAAlU,yBAAiZ,0BAAYA,WAAW,KAAvB,QAAjZ,sBAAwd,0BAAYA,WAAW,KAAvB,oBAAxd,8CAKJH,EAAWI,gBAAiB","file":"component---src-pages-guides-continuous-deployment-index-mdx-8189eeaea4ee15c2eb16.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mjperrins/projects/cat/guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This project is a `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.gatsbyjs.org/docs/themes/what-are-gatsby-themes/\"\n        }}>{`Gatsby theme`}</a>{` that empowers developers, writers, and designers to create fast, accessible sites that look and feel like Carbon. Follow along to start creating your own site.`}</p>\n    </PageDescription>\n    <h1 {...{\n      \"id\": \"argo-cd-configuration\"\n    }}>{`Argo CD Configuration`}</h1>\n    <p>{`To enable Argo CD to work seamlessly with the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.ibm.com/garage-catalyst/iteration-zero-ibmcloud\"\n      }}>{`Iteration Zero Tools`}</a>{` installation you need to configure Artifactory to be used as a Helm Chart Repository. This will enable the use of Helm charts that are included in the applications to be de-coupled from the image that is build with the CI pipeline with Jenkins. There is an sample in this repository that directly references the image from the IBM Cloud Image Registry if you do not want to use helm charts from a registery.`}</p>\n    <h3 {...{\n      \"id\": \"update-config-map-for-argo-cd\"\n    }}>{`Update Config Map for Argo CD`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` directory there is a `}<inlineCode parentName=\"p\">{`yaml`}</inlineCode>{` file called `}<inlineCode parentName=\"p\">{`argocd-helm-repo.yaml`}</inlineCode>{`. Edit this file and modify the `}<inlineCode parentName=\"p\">{`- url:`}</inlineCode>{` to point to the URL of the Artificatory Repository. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\n  namespace: tools\ndata:\n  helm.repositories: |\n    - url: http://artifactory.catalyst-team-iks-cluster.us-east.containers.appdomain.cloud/artifactory/generic-local/catalyst-team/\n      name: catalyst-team\n`}</code></pre>\n    <p>{`If you have configured the Artifactory instance to store Helm charts from your CI pipeline with Jenkins. You can easily get this value by Logging into Artifactory and clicking on `}<inlineCode parentName=\"p\">{`Setup Me Up`}</inlineCode>{` tile and click on the repository `}<inlineCode parentName=\"p\">{`generic-local`}</inlineCode>{` `}</p>\n    <img {...{\n      \"src\": \"./images/setupartifactory.png\",\n      \"alt\": \"Setup\",\n      \"title\": \"Setup Screen\"\n    }}></img>\n    <p>{`This will open the detailed setup view and from here you can copy the URL from the setup screen.`}</p>\n    <img {...{\n      \"src\": \"./images/artifactoryurlsetup.png\",\n      \"alt\": \"Setup\",\n      \"title\": \"Setup Screen\"\n    }}></img>\n    <h3 {...{\n      \"id\": \"run-the-kubectl-command\"\n    }}>{`Run the Kubectl Command`}</h3>\n    <p>{`Now you have edited the yamp you need to make sure you logged into the Command Line with either IBM Kubernetes Service or Red Hat OpenShift instructions. `}</p>\n    <p>{`You can test this by running the following commands :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kubectl get nodes | oc get nodes\n`}</code></pre>\n    <p>{`There is a helper shell script that you can run call `}<inlineCode parentName=\"p\">{`updateArgo.sh`}</inlineCode>{` this runs the following command to add the details of the Helm Registry with ArgoCD Config map.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#!/bin/bash\nkubectl apply -f argocd-helm-repo.yaml\n`}</code></pre>\n    <p>{`Once this is complete you can validate the configuration by opening the Config Map in the IKS Console or OpenShift Cluster Console. Navigate to the `}<inlineCode parentName=\"p\">{`tools`}</inlineCode>{` namespace and view the `}<inlineCode parentName=\"p\">{`Config Maps`}</inlineCode>{` open up the config map called `}<inlineCode parentName=\"p\">{`argocd-cm`}</inlineCode>{` and validate the the `}<inlineCode parentName=\"p\">{`Data`}</inlineCode>{` section now has a `}<inlineCode parentName=\"p\">{`helm.repositorys`}</inlineCode>{` entry that is referencing Artifactory.  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}